import difflib
from bs4 import BeautifulSoup, NavigableString

def read_html(filename):
    """读取 HTML 文件"""
    try:
        with open(filename, 'r', encoding='utf-8') as f:
            return f.read()
    except FileNotFoundError:
        print(f"错误：文件 '{filename}' 未找到")
        exit(1)

def normalize_text(text):
    """去除多余的空白字符，确保文本内容标准化"""
    return " ".join(text.split())

def get_sorted_tag_texts(tag):
    """获取标签内的文本内容，按标签顺序排序"""
    if tag:
        return sorted([normalize_text(element.get_text()) for element in tag.find_all(True) if element.get_text().strip() != ""])
    return []

def highlight_text_diff(old_text, new_text):
    """对比两个归一化后的文本，仅高亮 file1 中的差异"""
    differ = difflib.SequenceMatcher(None, old_text, new_text)
    result = []
    for tag, i1, i2, j1, j2 in differ.get_opcodes():
        if tag == 'equal':
            result.append(old_text[i1:i2])
        elif tag in ('replace', 'delete'):
            result.append(f'<span class="diff_sub">{old_text[i1:i2]}</span>')  # 高亮删除内容
    return ''.join(result)

def mark_differences(file1, file2, output_file='diff.html'):
    """对比两个 HTML 文件，并忽略标签顺序"""
    html1 = read_html(file1)
    html2 = read_html(file2)

    # 解析 HTML 文件
    soup1 = BeautifulSoup(html1, "html.parser")
    soup2 = BeautifulSoup(html2, "html.parser")

    # 逐行对比，忽略顺序差异
    for tag1, tag2 in zip(soup1.find_all("tr"), soup2.find_all("tr")):
        # 获取两个标签的内容并排序，忽略空标签
        sorted_text1 = get_sorted_tag_texts(tag1)
        sorted_text2 = get_sorted_tag_texts(tag2)

        # 如果归一化后的文本不同，进行标记
        if sorted_text1 != sorted_text2:
            # 获取 diff 内容，标记差异
            diff_html = highlight_text_diff(" ".join(sorted_text1), " ".join(sorted_text2))
            # 清空原文本并插入差异标记
            tag1.clear()
            tag1.append(BeautifulSoup(diff_html, "html.parser"))

    # 自定义 CSS 样式
    styled_content = f"""
    <html>
    <head>
        <meta charset="utf-8">
        <title>HTML 差异标注</title>
        <style>
            body {{
                font-family: Arial, sans-serif;
                margin: 20px;
            }}
            .diff_sub {{
                background-color: #ffb6ba;  /* 红色背景表示 file1 中的不同部分 */
                color: red;
                text-decoration: line-through;
            }}
        </style>
    </head>
    <body>
        {str(soup1)}
    </body>
    </html>
    """

    # 写入输出文件
    with open(output_file, 'w', encoding='utf-8') as f:
        f.write(styled_content)

    print(f"差异标注报告已生成：{output_file}")

if __name__ == "__main__":
    # 直接在代码中指定文件路径
    file1 = r"C:\path\to\your\file1.html"  # 替换为你的 HTML 文件路径
    file2 = r"C:\path\to\your\file2.html"  # 替换为你的 HTML 文件路径
    output_file = r"C:\path\to\your\diff.html"  # 结果文件路径

    mark_differences(file1, file2, output_file)
